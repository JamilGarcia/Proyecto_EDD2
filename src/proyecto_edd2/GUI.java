/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto_edd2;

import java.awt.event.ActionEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.FilenameFilter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author User
 */
public class GUI extends javax.swing.JFrame {

    ArrayList<Archivo> Lista_Archivos = new ArrayList();
    Archivo archivo_actual;// Objeto para identificar archivo actual
    
    public GUI() {
        initComponents();
         jl_nombre_archivo.setVisible(false); 
        //Cargar Archivos a la lista de archivos
        File directoryPath = new File("");
        //List text files only
	File[] files=directoryPath.listFiles(new FilenameFilter() {
            @Override
            public boolean accept(File dir, String name) {
		return name.endsWith(".txt");
            }
	});
        
	for (File file : files) {
            Archivo archivo_temp = new Archivo(file.getAbsolutePath());
            Lista_Archivos.add(archivo_temp);  
            Lista_Archivos.get(Lista_Archivos.indexOf(archivo_temp)).setNombre_archivo(file.getName());//Asignar los nombres de archivo
	}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_crearCampo = new javax.swing.JDialog();
        jLabelCampo = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jt_nombreCampo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cb_tipoCampo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        js_valorMinimo = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        js_maximoValor = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        js_longitud = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jb_crearCampo = new javax.swing.JButton();
        jd_abrirArchivo = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jT_Archivos = new javax.swing.JTree();
        jLabel1 = new javax.swing.JLabel();
        jb_abrirArchivo = new javax.swing.JButton();
        jb_salirAbrirArchivo = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jl_nombre_archivo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTP_Menus = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        B_Crear_Campo = new javax.swing.JButton();
        B_Listar_Campo = new javax.swing.JButton();
        B_Mod_Campo = new javax.swing.JButton();
        B_Borrar_Campo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_ListarCampos = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        B_Intro_Regis = new javax.swing.JButton();
        B_Modi_Regis = new javax.swing.JButton();
        B_Buscar_Regis = new javax.swing.JButton();
        B_Borrar_Regis = new javax.swing.JButton();
        B_Listar_Regis = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        B_Expor_Excel = new javax.swing.JButton();
        B_Expo_XML = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        B_Crear_Arch = new javax.swing.JButton();
        B_ReIndex_Arch = new javax.swing.JButton();
        jP_menuArchivo = new javax.swing.JPanel();
        B_Nuevo_Arch = new javax.swing.JButton();
        B_Abrir_Arch = new javax.swing.JButton();
        B_Salvar_Arch = new javax.swing.JButton();
        B_Cerrar_Arch = new javax.swing.JButton();
        B_Salir = new javax.swing.JButton();

        jd_crearCampo.setTitle("Crear Campo");

        jLabelCampo.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelCampo.setText("Crear Campo");

        jLabel3.setText("Nombre de campo:");

        jLabel4.setText("Tipo de dato:");

        cb_tipoCampo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "String", "Int", "Double", "Float", "Char", " " }));
        cb_tipoCampo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_tipoCampoItemStateChanged(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setText("Restricciones");

        jLabel6.setText("Rango:");

        js_valorMinimo.setModel(new javax.swing.SpinnerNumberModel());

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("a");

        js_maximoValor.setModel(new javax.swing.SpinnerNumberModel(10, null, null, 1));

        jLabel8.setText("Longitud:");

        js_longitud.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel9.setText("Importante: si el valor de la longitud es igual a 0 se entendera que no hay restriccion de longitud para String.");

        jb_crearCampo.setText("Crear Campo");

        javax.swing.GroupLayout jd_crearCampoLayout = new javax.swing.GroupLayout(jd_crearCampo.getContentPane());
        jd_crearCampo.getContentPane().setLayout(jd_crearCampoLayout);
        jd_crearCampoLayout.setHorizontalGroup(
            jd_crearCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_crearCampoLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jd_crearCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(jd_crearCampoLayout.createSequentialGroup()
                        .addGroup(jd_crearCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jd_crearCampoLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(js_valorMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(js_maximoValor, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8))
                            .addGroup(jd_crearCampoLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jt_nombreCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jd_crearCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cb_tipoCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(js_longitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(52, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_crearCampoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jd_crearCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_crearCampoLayout.createSequentialGroup()
                        .addComponent(jLabelCampo)
                        .addGap(263, 263, 263))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_crearCampoLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(259, 259, 259))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_crearCampoLayout.createSequentialGroup()
                        .addComponent(jb_crearCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(284, 284, 284))))
        );
        jd_crearCampoLayout.setVerticalGroup(
            jd_crearCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_crearCampoLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabelCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jd_crearCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jt_nombreCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cb_tipoCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(jLabel5)
                .addGap(42, 42, 42)
                .addGroup(jd_crearCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(js_valorMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(js_maximoValor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(js_longitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jb_crearCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Archivos");
        jT_Archivos.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jT_Archivos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jT_ArchivosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jT_Archivos);

        jLabel1.setText("File Manager");

        jb_abrirArchivo.setText("Abrir");
        jb_abrirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_abrirArchivoActionPerformed(evt);
            }
        });

        jb_salirAbrirArchivo.setText("Salir");
        jb_salirAbrirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_salirAbrirArchivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jb_abrirArchivo)
                            .addComponent(jb_salirAbrirArchivo))))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jb_abrirArchivo)
                        .addGap(18, 18, 18)
                        .addComponent(jb_salirAbrirArchivo)))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd_abrirArchivoLayout = new javax.swing.GroupLayout(jd_abrirArchivo.getContentPane());
        jd_abrirArchivo.getContentPane().setLayout(jd_abrirArchivoLayout);
        jd_abrirArchivoLayout.setHorizontalGroup(
            jd_abrirArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jd_abrirArchivoLayout.setVerticalGroup(
            jd_abrirArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jl_nombre_archivo.setText("jlabel");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel2.setText("Standar File Manager");

        jTP_Menus.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTP_MenusStateChanged(evt);
            }
        });

        B_Crear_Campo.setText("Crear Campo");
        B_Crear_Campo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                B_Crear_CampoMouseClicked(evt);
            }
        });

        B_Listar_Campo.setText("Listar Campo");
        B_Listar_Campo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                B_Listar_CampoMouseClicked(evt);
            }
        });

        B_Mod_Campo.setText("Modificar Campo");
        B_Mod_Campo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                B_Mod_CampoMouseClicked(evt);
            }
        });

        B_Borrar_Campo.setText("Borrar Campo");
        B_Borrar_Campo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                B_Borrar_CampoMouseClicked(evt);
            }
        });

        table_ListarCampos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Campos", "Tipo de Dato", "Restriccion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_ListarCampos);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(B_Borrar_Campo)
                    .addComponent(B_Mod_Campo)
                    .addComponent(B_Listar_Campo)
                    .addComponent(B_Crear_Campo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(B_Crear_Campo)
                        .addGap(47, 47, 47)
                        .addComponent(B_Listar_Campo)
                        .addGap(47, 47, 47)
                        .addComponent(B_Mod_Campo)
                        .addGap(47, 47, 47)
                        .addComponent(B_Borrar_Campo))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(257, Short.MAX_VALUE))
        );

        jTP_Menus.addTab("Campos", jPanel4);

        B_Intro_Regis.setText("Introducir Registros");

        B_Modi_Regis.setText("Modificar Registros");

        B_Buscar_Regis.setText("Buscar Registros");

        B_Borrar_Regis.setText("Borrar Registros");

        B_Listar_Regis.setText("Listar Registros");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(B_Listar_Regis)
                    .addComponent(B_Borrar_Regis)
                    .addComponent(B_Buscar_Regis)
                    .addComponent(B_Modi_Regis)
                    .addComponent(B_Intro_Regis))
                .addContainerGap(481, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(B_Intro_Regis)
                .addGap(41, 41, 41)
                .addComponent(B_Modi_Regis)
                .addGap(48, 48, 48)
                .addComponent(B_Buscar_Regis)
                .addGap(50, 50, 50)
                .addComponent(B_Borrar_Regis)
                .addGap(57, 57, 57)
                .addComponent(B_Listar_Regis)
                .addContainerGap(184, Short.MAX_VALUE))
        );

        jTP_Menus.addTab("Registros", jPanel5);

        B_Expor_Excel.setText("Expotar Excel");

        B_Expo_XML.setText("Exportar XML con Schema");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(B_Expo_XML)
                    .addComponent(B_Expor_Excel))
                .addContainerGap(437, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(B_Expor_Excel)
                .addGap(51, 51, 51)
                .addComponent(B_Expo_XML)
                .addContainerGap(407, Short.MAX_VALUE))
        );

        jTP_Menus.addTab("Estandarizacion", jPanel7);

        B_Crear_Arch.setText("Crear Indice");

        B_ReIndex_Arch.setText("Re Indexar Archivos");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(B_ReIndex_Arch)
                    .addComponent(B_Crear_Arch))
                .addContainerGap(470, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(B_Crear_Arch)
                .addGap(60, 60, 60)
                .addComponent(B_ReIndex_Arch)
                .addContainerGap(404, Short.MAX_VALUE))
        );

        jTP_Menus.addTab("Indices", jPanel6);

        B_Nuevo_Arch.setText("Nuevo Archivo");
        B_Nuevo_Arch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_Nuevo_ArchActionPerformed(evt);
            }
        });

        B_Abrir_Arch.setText("Abrir Archivo");
        B_Abrir_Arch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_Abrir_ArchActionPerformed(evt);
            }
        });

        B_Salvar_Arch.setText("Salvar Archivo");
        B_Salvar_Arch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_Salvar_ArchActionPerformed(evt);
            }
        });

        B_Cerrar_Arch.setText("Cerrar Archivo");
        B_Cerrar_Arch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_Cerrar_ArchActionPerformed(evt);
            }
        });

        B_Salir.setText("Salir");
        B_Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_SalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jP_menuArchivoLayout = new javax.swing.GroupLayout(jP_menuArchivo);
        jP_menuArchivo.setLayout(jP_menuArchivoLayout);
        jP_menuArchivoLayout.setHorizontalGroup(
            jP_menuArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_menuArchivoLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jP_menuArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(B_Salir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(B_Nuevo_Arch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(B_Abrir_Arch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(B_Salvar_Arch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(B_Cerrar_Arch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(494, Short.MAX_VALUE))
        );
        jP_menuArchivoLayout.setVerticalGroup(
            jP_menuArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_menuArchivoLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(B_Nuevo_Arch)
                .addGap(44, 44, 44)
                .addComponent(B_Abrir_Arch)
                .addGap(42, 42, 42)
                .addComponent(B_Salvar_Arch)
                .addGap(37, 37, 37)
                .addComponent(B_Cerrar_Arch)
                .addGap(37, 37, 37)
                .addComponent(B_Salir)
                .addContainerGap(217, Short.MAX_VALUE))
        );

        jTP_Menus.addTab("Archivo", jP_menuArchivo);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jTP_Menus, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(57, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(102, 102, 102)
                    .addComponent(jl_nombre_archivo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(565, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addGap(45, 45, 45)
                .addComponent(jTP_Menus, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(69, 69, 69)
                    .addComponent(jl_nombre_archivo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(655, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 801, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 756, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cb_tipoCampoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_tipoCampoItemStateChanged

        DefaultComboBoxModel modelo = (DefaultComboBoxModel) cb_tipoCampo.getModel();

        if (evt.getStateChange() == 1) {

            int indexSeleccion = cb_tipoCampo.getSelectedIndex();
            String objeto = (String) cb_tipoCampo.getSelectedItem();

            if (objeto.equals("String")) {
                js_maximoValor.setEnabled(false);
                js_valorMinimo.setEnabled(false);
                js_longitud.setEnabled(true);

            } else if (objeto.equals("Char")) {
                js_maximoValor.setEnabled(false);
                js_valorMinimo.setEnabled(false);
                js_longitud.setEnabled(false);

            } else if (objeto.equals("Int") || objeto.equals("Double")
                    || objeto.equals("Float") || objeto.contains("Short")
                    || objeto.contains("Long")) {

                js_maximoValor.setEnabled(true);
                js_valorMinimo.setEnabled(true);
                js_longitud.setEnabled(false);
            }
        }
    }//GEN-LAST:event_cb_tipoCampoItemStateChanged

    private void B_Crear_CampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_B_Crear_CampoMouseClicked
        jt_nombreCampo.setEnabled(true);
        cb_tipoCampo.setEnabled(true);

        jd_crearCampo.setModal(true);
        jd_crearCampo.pack();
        jd_crearCampo.setLocationRelativeTo(this);
        jd_crearCampo.setVisible(true);
    }//GEN-LAST:event_B_Crear_CampoMouseClicked

    private void B_Listar_CampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_B_Listar_CampoMouseClicked
        // TODO Listar campos obtenidos de la metadata
    }//GEN-LAST:event_B_Listar_CampoMouseClicked

    private void B_Mod_CampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_B_Mod_CampoMouseClicked
        if (table_ListarCampos.getSelectedRow() != -1) {

            //conseguir los datos de la table del campo
            jt_nombreCampo.setEnabled(false);
            cb_tipoCampo.setEnabled(false);

            jLabelCampo.setText("Editar Campo");

            jd_crearCampo.setModal(true);
            jd_crearCampo.pack();
            jd_crearCampo.setLocationRelativeTo(this);
            jd_crearCampo.setVisible(true);
         
        } else {

            JOptionPane.showMessageDialog(this, "No selecciono un campo en la tabla");
        }
    }//GEN-LAST:event_B_Mod_CampoMouseClicked

    private void B_Borrar_CampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_B_Borrar_CampoMouseClicked
        
        if (table_ListarCampos.getSelectedRow() != -1) {

            //procedemos a eliminarlo de la table
            //procedemos a eliminarlo de la lista de Metadata
        } else {

            JOptionPane.showMessageDialog(this, "No selecciono un campo en la tabla");
        }
    }//GEN-LAST:event_B_Borrar_CampoMouseClicked

    private void jT_ArchivosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jT_ArchivosMouseClicked
        // TODO add your handling code here:

        if(evt.getClickCount() < 1){
            nodo_seleccionado = null;
        } else {
            nodo_seleccionado = (DefaultMutableTreeNode) jT_Archivos.getSelectionPath().getLastPathComponent();
        }
    }//GEN-LAST:event_jT_ArchivosMouseClicked

    private void jb_abrirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_abrirArchivoActionPerformed
        //Abrir el archivo mediante el nodo del Jtree seleccionado

        boolean confirm_open = false;

        if(nodo_seleccionado == null ){
            JOptionPane.showMessageDialog(jd_abrirArchivo, "No se ha seleccionado ningun archivo.");
            confirm_open = false;
        }  else if(nodo_seleccionado == jT_Archivos.getModel().getRoot()){
            JOptionPane.showMessageDialog(jd_abrirArchivo, "No se puede seleccionar la raiz de los archivos");
            confirm_open = false;
        }  else if(nodo_seleccionado.getUserObject() == archivo_actual){
            JOptionPane.showMessageDialog(jd_abrirArchivo, "El archivo seleccionado ya esta abierto.");
        }else {
            //Se selecciono un archivo
            if(archivo_actual == null){
                //No hay otro archivo abierto
                confirm_open = true;
            } else {
                //Hay un archivo abierto
                int resultado =  JOptionPane.showConfirmDialog(jP_menuArchivo, "El archivo '" + archivo_actual.getNombre_archivo()
                    + "' esta abierto\n¿Desea guardarlo para cerrarlo?", "Abrir Archivo",JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                if(resultado == 0){
                    //Ingresa SI el usuario
                    //Llevar a opcion de salvar archivo
                    if(archivo_actual.getNombre_archivo().equals("nuevo archivo")){
                        //Primera ves que se guarda un nuevo archivo
                        B_Salvar_ArchActionPerformed(new ActionEvent(this, ActionEvent.ACTION_PERFORMED, null));
                    } else {//Ya existia el archivo
                        escribirArchivo();
                        JOptionPane.showMessageDialog(jd_abrirArchivo, "!El archivo " + archivo_actual.getNombre_archivo()+ " se ha guardado exitosamente!");
                        JOptionPane.showMessageDialog(jd_abrirArchivo, "!El archivo: " + archivo_actual.getNombre_archivo() + " se ha cerrado correctamente!");
                    }

                    confirm_open = true;
                } else {
                    //Ingresa NO el usuario
                    if(archivo_actual.getNombre_archivo().equals("nuevo archivo")){
                        //si el archivo no se ha guardado antes e ingreso NO, Se pierden los datos
                        Lista_Archivos.remove(archivo_actual);
                        refrescarJTree();
                        archivo_actual = null;
                    }
                    //El archivo abierto no se guardara antes que de abrir uno nuevo
                    if(archivo_actual == null){
                        JOptionPane.showMessageDialog(jd_abrirArchivo, "No se guardo el ' nuevo archivo ' .");
                    } else {
                        JOptionPane.showMessageDialog(jd_abrirArchivo, "No se guardo el archivo: " + archivo_actual.getNombre_archivo());
                    }

                    confirm_open = true;
                }
            }
        }

        if(confirm_open){
            archivo_actual = null;
            archivo_actual = (Archivo) nodo_seleccionado.getUserObject();
            JOptionPane.showMessageDialog(jd_abrirArchivo, "!El archivo " + archivo_actual.getNombre_archivo() +" se ha abierto exitosamente!");
            jl_nombre_archivo.setText(archivo_actual.getNombre_archivo());
            archivo_actual.setGuardado(false);
            jl_nombre_archivo.setVisible(true);
            jd_abrirArchivo.dispose();
        }
    }//GEN-LAST:event_jb_abrirArchivoActionPerformed

    private void jb_salirAbrirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_salirAbrirArchivoActionPerformed
        //Cerrar JDialog para abrir archivo
        jd_abrirArchivo.dispose();
    }//GEN-LAST:event_jb_salirAbrirArchivoActionPerformed

    private void B_Nuevo_ArchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_Nuevo_ArchActionPerformed
        //Creacion de un nuevo archivo vacio
        //Verificacion si hay un archivo abierto
        if(archivo_actual == null){
            //do nothing
        } else {
            //Hay un archivo abierto, preguntar si lo quiere guardar para cerrarlo
            int resultado_guardar =  JOptionPane.showConfirmDialog(jP_menuArchivo, "No ha guardado el archivo actual\n¿Desea guardarlo?"
                + "", "Salir",JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            //Llevar a metodo salvar archivo 
            if(resultado_guardar == 0){
                //Selecciono SI
                if(archivo_actual.getNombre_archivo().equals("nuevo archivo")){
                    //Es la primera vez que se guarda el archivo
                    B_Salvar_ArchActionPerformed(new ActionEvent(this, ActionEvent.ACTION_PERFORMED, null));
                } else {
                    //El archivo ya se ha guardado previamente
                    escribirArchivo();
                }
            } else {
                //Selecciono NO
                if(archivo_actual.getNombre_archivo().equals("nuevo archivo")){
                    Lista_Archivos.remove(archivo_actual);
                }
                JOptionPane.showMessageDialog(jP_menuArchivo, "No se guardo el archivo: '" + archivo_actual.getNombre_archivo() + "'.");
                archivo_actual = null;
                
            }
        }
            
        JOptionPane.showMessageDialog(jP_menuArchivo, "cargando...");
        Archivo archivo_nuevo = new Archivo("./nuevo_archivo.txt");
        Lista_Archivos.add(archivo_nuevo);
        archivo_actual = archivo_nuevo;
        JOptionPane.showMessageDialog(jP_menuArchivo, "Se ha creado el  archivo exitosamente", 
            "nuevo archivo", JOptionPane.INFORMATION_MESSAGE);
        //Agregar el nombre del documento en la pantalla principal
        jl_nombre_archivo.setText(archivo_actual.getNombre_archivo()); 
        jl_nombre_archivo.setVisible(true);
        //Refrescar JTree Archivos
        refrescarJTree();
    }//GEN-LAST:event_B_Nuevo_ArchActionPerformed

    private void B_Abrir_ArchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_Abrir_ArchActionPerformed
        //Metodo abrir un archivo
        if(Lista_Archivos.isEmpty()){
            JOptionPane.showMessageDialog(jP_menuArchivo, "No hay ningun archivo en el sistema.", 
                    "Advertencia Abrir Archivo", JOptionPane.WARNING_MESSAGE);
        } else {
            nodo_seleccionado = null;
            refrescarJTree();
            jd_abrirArchivo.setModal(true);
            jd_abrirArchivo.pack();
            jd_abrirArchivo.setLocationRelativeTo(this);
            jd_abrirArchivo.setVisible(true);
        }
    }//GEN-LAST:event_B_Abrir_ArchActionPerformed

    private void B_Salvar_ArchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_Salvar_ArchActionPerformed
        //Metodo salvar archivo
        String nombre_archivo = null ;
        boolean confirm_name = false;
        boolean confirm_save = false;
        
        if(archivo_actual != null){
            //Revisar si el archivo ya esta guardado
            if(archivo_actual.isGuardado()){
                JOptionPane.showMessageDialog(jP_menuArchivo, "El archivo: '" + archivo_actual.getNombre_archivo() 
                        + "' ya esta guardado.");
            } else {
                //El archivo no esta guardado
                //Revisar si el archivo ya tiene un nombre guardado
                if(archivo_actual.getNombre_archivo().equals("nuevo archivo")){
                    //No tiene un nombre guardado, significando salvar por 1era vez el archivo
                    while(!confirm_name){
                        nombre_archivo = JOptionPane.showInputDialog(jP_menuArchivo, "Ingrese el nombre del archivo: ", 
                        "Salvar Archivo", JOptionPane.DEFAULT_OPTION); 
                    
                        if(nombre_archivo != null){
                        //El usuario ingreso el nombre del archivo
                            //No se puede utilizar el nombre "nuevo documento" ya que es el nombre base
                            if(nombre_archivo.equals("nuevo archivo")){
                                JOptionPane.showMessageDialog(jP_menuArchivo, "No se puede utilizar el nombre 'nuevo archivo\n'"
                                    + "por decision del desarrolador.");
                            }  else { confirm_name = true;}
                            
                            if(confirm_name){
                                //Si pasa la primera validacion puede ir a la segunda validacion
                                //Revisar validaciones para el nombre
                                if(nombre_archivo.contains(".")){
                                //El archivo no puede llevar un punto
                                    JOptionPane.showMessageDialog(jP_menuArchivo, "El Archivo no puede incluir un '.'", 
                                    "Advertencia", JOptionPane.WARNING_MESSAGE);
                                    confirm_name = false; 
                                } else {
                                    confirm_name = true;
                                }    
                                if(confirm_name){
                                    //Revisar que el nombre no sea igual a otro archivo
                                    nombre_archivo = nombre_archivo + ".txt";
                                    for (int i = 0; i < Lista_Archivos.size(); i++) {
                                        if(nombre_archivo.equals(Lista_Archivos.get(i).getNombre_archivo())){
                                            //El nombre se repite
                                            JOptionPane.showMessageDialog(jP_menuArchivo, "El nombre "+ nombre_archivo +" ya esta siendo "
                                                + "utilizado para otro archivo","Advertencia", JOptionPane.WARNING_MESSAGE);
                                            confirm_name = false;
                                            break;
                                        } else {
                                            confirm_name = true;
                                        }
                                    }
                                }
                            }
                            //Confirmacion de dato
                            if(confirm_name){
                                archivo_actual.setNombre_archivo(nombre_archivo);
                                archivo_actual.setArchivo( "./"+nombre_archivo);
                                confirm_save = true;
                            }
                        } else {
                            //do nothing, eligio la opcion cancelar
                        confirm_name = true;
                        confirm_save =  false;
                        }
                    }    
                } else {
                    //El archivo ya tiene nombre propio y se ha guardado minimo 1 vez
                    int opcion_save = JOptionPane.showConfirmDialog(jP_menuArchivo, "¿Desea guardar el archivo " 
                            + archivo_actual.getNombre_archivo() + "?", "Salvar Archivo", JOptionPane.YES_NO_OPTION);
                    if(opcion_save == 0){
                        //Selecciono SI el usuario
                        confirm_save = true;
                    } else {
                        //Selecciono NO el usuario
                        confirm_save = false;
                    }
                }
                //Guardar si se ha confirmado por medio de las validaciones
                if(confirm_save == true){
                    //Escribir el archivo
                    escribirArchivo(); 
                    JOptionPane.showMessageDialog(jP_menuArchivo, "!El archivo se ha guardado exitosamente!");
                    archivo_actual.setGuardado(true);
                    //Refrescar JTree
                    refrescarJTree();
                } else {/*No se guarda el programa, do nothing*/}
            }
              
        } else {
            //No hay un archivo siendo utilizado
            JOptionPane.showMessageDialog(jP_menuArchivo, "No se esta utilizando ningun archivo.\n", "Advertencia", 
                    JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_B_Salvar_ArchActionPerformed

    private void B_Cerrar_ArchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_Cerrar_ArchActionPerformed
        //Metodo cerrar archivo
        boolean confirm_cerrar = false;
        if(archivo_actual != null){
            //Hay un archivo abierto
            if(!archivo_actual.isGuardado()){
                //Archivo no esta guardado
                int resultado =  JOptionPane.showConfirmDialog(jP_menuArchivo, "No ha guardado el archivo actual\n¿Desea guardarlo?"
                + "", "Cerrar Archivo",JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                if(resultado == 0){
                    //Ingresa SI el usuario
                    //Verificar si el archivo es nuevo o si ya ha sido utilizado y guardado antes
                    if(archivo_actual.getNombre_archivo().equals("nuevo archivo")){
                        B_Salvar_ArchActionPerformed(new ActionEvent(this, ActionEvent.ACTION_PERFORMED, null));
                    } else {
                        //Solo se guarda el archivo ya existente
                        escribirArchivo();
                        JOptionPane.showMessageDialog(jP_menuArchivo, "!El archivo " + archivo_actual.getNombre_archivo()+ " se ha guardado exitosamente!");
                    }
                    
                    confirm_cerrar = true;
                } else {
                    //Ingresa NO el usuario 
                    JOptionPane.showMessageDialog(jP_menuArchivo, "No se guardaron los datos del archivo: " + archivo_actual.getNombre_archivo() + " .",
                        "Cerrar Archivo", JOptionPane.DEFAULT_OPTION); 
                    confirm_cerrar = true;
                } 
            } else {
                //Archivo esta guardado
                confirm_cerrar = true;
            } 
        } else {
            //No hay un archivo abierto por el momento
            JOptionPane.showMessageDialog(jP_menuArchivo, "No hay ningun archivo abierto actualmente."
                    + "\nNo puede hacer uso de esta función.", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
        //Cerrar Archivo
        if(confirm_cerrar){
            archivo_actual = null;
            jl_nombre_archivo.setVisible(false);
            JOptionPane.showMessageDialog(jP_menuArchivo, "Se ha cerrado el archivo correctamente."
                            + "", "Cerrar Archivo", JOptionPane.DEFAULT_OPTION); 
        }
    }//GEN-LAST:event_B_Cerrar_ArchActionPerformed

    private void B_SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_SalirActionPerformed
                //Metodo salir
        boolean confirmar_salir = false;
        if(archivo_actual != null && !archivo_actual.isGuardado()){
            //Se esta usando un archivo y no esta guardado
            int resultado =  JOptionPane.showConfirmDialog(jP_menuArchivo, "No ha guardado el archivo actual: " +archivo_actual.getNombre_archivo() + "\n¿Desea guardarlo?"
                + "", "Salir",JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if(resultado == 0){
                //Ingresa SI el usuario
                //Verificar si el archivo es nuevo o si ya ha sido guardado, llevar a opcion de salvar archivo
                if(archivo_actual.getNombre_archivo().equals("nuevo archivo")){
                    B_Salvar_ArchActionPerformed(new ActionEvent(this, ActionEvent.ACTION_PERFORMED, null));
                } else {
                    //El archivo no es nuevo
                    JOptionPane.showMessageDialog(jP_menuArchivo, "!El archivo " + archivo_actual.getNombre_archivo()+ " se ha guardado exitosamente!");
                    JOptionPane.showMessageDialog(jP_menuArchivo, "!El archivo: " + archivo_actual.getNombre_archivo() + " se ha cerrado correctamente!"); 
                    escribirArchivo();
                    archivo_actual = null;
                }
                confirmar_salir = true;
            } else {
                //Ingresa NO el usuario
                confirmar_salir = true;   
            } 
        } else { confirmar_salir = true;}
    
        if(confirmar_salir){
            int resultado_salir =  JOptionPane.showConfirmDialog(jP_menuArchivo, "¿Esta seguro de salir?"
                + "", "Salir",JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if(resultado_salir == 0){ // Ingreso SI el usuario
                JOptionPane.showMessageDialog(jP_menuArchivo, "Hasta Luego.", "Salir", JOptionPane.PLAIN_MESSAGE);
                System.exit(0); 
            } else {//Ingreso NO el usuario
                //do nothing
            }    
        }
    }//GEN-LAST:event_B_SalirActionPerformed

    private void jTP_MenusStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTP_MenusStateChanged
        //Cambio de Tab
        int indice_menu = jTP_Menus.getSelectedIndex();
        if(archivo_actual == null && indice_menu > 0){
            jTP_Menus.setSelectedIndex(0);
            JOptionPane.showMessageDialog(jP_menuArchivo, "No hay archivos en el sistema.\n"
                    + "Debe abrir o crear un nueco archivo para acceder al resto de funciones."); 
        }
    }//GEN-LAST:event_jTP_MenusStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_Abrir_Arch;
    private javax.swing.JButton B_Borrar_Campo;
    private javax.swing.JButton B_Borrar_Regis;
    private javax.swing.JButton B_Buscar_Regis;
    private javax.swing.JButton B_Cerrar_Arch;
    private javax.swing.JButton B_Crear_Arch;
    private javax.swing.JButton B_Crear_Campo;
    private javax.swing.JButton B_Expo_XML;
    private javax.swing.JButton B_Expor_Excel;
    private javax.swing.JButton B_Intro_Regis;
    private javax.swing.JButton B_Listar_Campo;
    private javax.swing.JButton B_Listar_Regis;
    private javax.swing.JButton B_Mod_Campo;
    private javax.swing.JButton B_Modi_Regis;
    private javax.swing.JButton B_Nuevo_Arch;
    private javax.swing.JButton B_ReIndex_Arch;
    private javax.swing.JButton B_Salir;
    private javax.swing.JButton B_Salvar_Arch;
    private javax.swing.JComboBox<String> cb_tipoCampo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelCampo;
    private javax.swing.JPanel jP_menuArchivo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTP_Menus;
    private javax.swing.JTree jT_Archivos;
    private javax.swing.JButton jb_abrirArchivo;
    private javax.swing.JButton jb_crearCampo;
    private javax.swing.JButton jb_salirAbrirArchivo;
    private javax.swing.JDialog jd_abrirArchivo;
    private javax.swing.JDialog jd_crearCampo;
    private javax.swing.JLabel jl_nombre_archivo;
    private javax.swing.JSpinner js_longitud;
    private javax.swing.JSpinner js_maximoValor;
    private javax.swing.JSpinner js_valorMinimo;
    private javax.swing.JTextField jt_nombreCampo;
    private javax.swing.JTable table_ListarCampos;
    // End of variables declaration//GEN-END:variables
    
    DefaultMutableTreeNode nodo_seleccionado = null;
    
    public void refrescarJTree(){
        DefaultTreeModel m = (DefaultTreeModel) jT_Archivos.getModel();
        DefaultMutableTreeNode raiz= (DefaultMutableTreeNode) m.getRoot();
        DefaultMutableTreeNode nodo_archivo;
        
        //Dejar limpio el arbol al actualizar
        raiz.removeAllChildren();
        m.reload();
        
        
        for (int i = 0; i < Lista_Archivos.size(); i++) {
            nodo_archivo = new DefaultMutableTreeNode(Lista_Archivos.get(i));
            raiz.add(nodo_archivo);
        }
        m.reload();
    }
    
    public void escribirArchivo(){
        FileWriter fw = null;
        BufferedWriter bw = null;
        //Aplicar el nuevo nombre dado  
        try {
            fw = new FileWriter(archivo_actual.getArchivo(), false);
            bw = new BufferedWriter(fw);
            
            //Escribir la definicion de los campos y registros
            
            bw.flush();
        } catch (Exception ex) {
            
        } finally {
            try {
                bw.close();
                fw.close();
            } catch (IOException e) {
            }
        }
        
    }
}
